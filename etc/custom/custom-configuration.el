(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(before-save-hook nil)
 '(blink-matching-paren nil)
 '(coffee-tab-width 4)
 '(dired-details-hide-link-targets nil)
 '(face-font-family-alternatives (quote (("mono" "dejavu" "fixed") ("courier" "CMU Typewriter Text" "fixed") ("Sans Serif" "helv" "helvetica" "arial" "fixed") ("helv" "helvetica" "arial" "fixed"))))
 '(face-font-selection-order (quote (:width :height :weight :slant)))
 '(fill-column 100)
 '(focus-follows-mouse t)
 '(haskell-notify-p t)
 '(haskell-process-type (quote ghci))
 '(haskell-stylish-on-save t)
 '(haskell-tags-on-save t)
 '(line-number-mode t)
 '(menu-bar-mode nil)
 '(nxml-attribute-indent 2)
 '(nxml-child-indent 2)
 '(nxml-outline-child-indent 2)
 '(org-drawers (quote ("PROPERTIES" "CLOCK" "LOGBOOK" "HIDDEN" "MORE")))
 '(org-fontify-done-headline t)
 '(org-fontify-emphasized-text t)
 '(org-hide-leading-stars t)
 '(org-highlight-latex-fragments-and-specials t)
 '(org-level-color-stars-only t)
 '(org-modules (quote (org-bbdb org-bibtex org-crypt org-gnus org-id org-info org-drill org-jsinfo org-habit org-inlinetask org-irc org-mew org-mhe org-protocol org-rmail org-vm org-wl org-w3m)))
 '(org-odd-levels-only nil)
 '(org-pretty-entities t)
 '(org-refile-allow-creating-parent-nodes (quote confirm))
 '(org-replace-disputed-keys t)
 '(org-src-fontify-natively t)
 '(org-startup-align-all-tables t)
 '(org-startup-folded nil)
 '(org-todo-keyword-faces (quote (("TODO" :foreground "red" :weight bold) ("NEXT" :foreground "yellow" :weight bold) ("DONE" :foreground "forest green" :weight bold) ("WAITING" :foreground "orange" :weight bold) ("HOLD" :foreground "magenta" :weight bold) ("CANCELLED" :foreground "forest green" :weight bold) ("PHONE" :foreground "forest green" :weight bold))))
 '(paren-highlight-at-point nil)
 '(projectile-completion-system (quote helm))
 '(projectile-globally-ignored-directories (quote (".idea" ".eunit" ".git" ".hg" ".fslckout" ".bzr" "_darcs" ".tox" ".svn" "build" ".ensime_cache")))
 '(sclang-auto-scroll-post-buffer t)
 '(sclang-eval-line-forward nil)
 '(show-paren-mode t)
 '(truncate-lines t)
 '(undo-limit 800000)
 '(undo-strong-limit 2000000)
 '(vline-global-mode nil)
 '(vline-idle-time 0.2)
 '(vline-style (quote face))
 '(vline-visual nil))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(diff-added ((t (:foreground "Green"))))
 '(diff-removed ((t (:foreground "Red"))))
 '(ediff-even-diff-A ((((class color) (background dark)) (:background "dark green"))))
 '(ediff-even-diff-B ((((class color) (background dark)) (:background "dark red"))))
 '(ediff-odd-diff-A ((((class color) (background dark)) (:background "dark green"))))
 '(ediff-odd-diff-B ((((class color) (background dark)) (:background "dark red"))))
 '(fixed-pitch ((t (:family "Bitstream Vera Sans Mono"))))
 '(flymake-errline ((((class color)) (:foreground "red" :box (:line-width 1 :color "red" :style released-button)))))
 '(flymake-warnline ((((class color)) (:underline "yellow"))))
 '(font-lock-builtin-face ((((class color) (min-colors 88) (background dark)) (:foreground "SteelBlue"))))
 '(font-lock-comment-face ((t (:foreground "gray70" :slant italic))))
 '(font-lock-constant-face ((t (:foreground "lightgreen"))))
 '(font-lock-doc-face ((t (:foreground "gray70" :slant italic))))
 '(font-lock-function-name-face ((((class color) (min-colors 88) (background dark)) (:foreground "yellow2"))))
 '(font-lock-keyword-face ((((class color) (min-colors 88) (background dark)) (:foreground "yellow"))))
 '(font-lock-string-face ((t (:foreground "lightgreen"))))
 '(font-lock-type-face ((((class color) (min-colors 88) (background dark)) (:foreground "LightBlue"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 88) (background dark)) (:foreground "yellow2"))))
 '(fringe ((t (:background "grey25"))))
 '(helm-selection ((t (:background "ForestGreen" :foreground "yellow"))))
 '(mode-line ((t (:background "blue" :foreground "white" :weight bold))))
 '(mode-line-inactive ((default (:inherit mode-line)) (nil (:background "lightblue" :foreground "white"))))
 '(mumamo-background-chunk-major ((((class color) (background dark)) (:background "black"))))
 '(mumamo-background-chunk-submode1 ((((class color) (background dark)) (:background "black"))))
 '(org-hide ((t (:foreground "heather"))))
 '(paren-face-match ((t (:underline t))))
 '(show-paren-match ((t (:background "gold")))))


;;(custom-set-variables
;; ;; custom-set-variables was added by Custom.
;; ;; If you edit it by hand, you could mess it up, so be careful.
;; ;; Your init file should contain only one such instance.
;; ;; If there is more than one, they won't work right.
;; '(auto-install-directory "~/emacs/auto-install-lisp")
;; '(auto-install-install-confirm t)
;; '(auto-install-replace-confirm t)
;; '(bmkp-last-as-first-bookmark-file "~/emacs/bookmarks/rexa2-bookmarks.bmk")
;; '(bookmark-default-file "~/emacs/bookmarks/index.bmk")
;; '(bookmark-version-control (quote nospecial))
;; '(case-fold-search t)
;; '(current-language-environment "Latin-1")
;; '(default-input-method "latin-1-prefix")
;; '(dired-details-initially-hide nil)
;; '(dired-listing-switches "-ABl")
;; '(eproject-completing-read-function (quote eproject--ido-completing-read))
;; '(eproject-todo-expressions (quote ("TODO" "XXX" "NOPUSH" "NOCOMMIT" "FIXME")))
;; '(filesets-data (quote (("jade-files" (:tree "/home/saunders/projects/the-livingroom/dvcs-mirrors/bitbucket.com/iesl@bitbucket.com/openreview/prj-openreview-front/app/views" "^.+\\.jade$")))))
;; '(global-font-lock-mode t nil (font-lock))
;; '(global-hl-line-mode t)
;; '(hippie-expand-try-functions-list (quote (try-expand-all-abbrevs try-expand-dabbrev try-expand-dabbrev-all-buffers try-expand-dabbrev-from-kill)))
;; '(ibuffer-saved-filter-groups nil)
;; '(ibuffer-saved-filters (quote (("test-filters" ((or (filename . "perl") (mode . dired-mode)))) ("gnus" ((or (mode . message-mode) (mode . mail-mode) (mode . gnus-group-mode) (mode . gnus-summary-mode) (mode . gnus-article-mode)))) ("programming" ((or (mode . emacs-lisp-mode) (mode . cperl-mode) (mode . c-mode) (mode . java-mode) (mode . idl-mode) (mode . lisp-mode)))))))
;; '(icicle-buffers-ido-like-flag t)
;; '(icicle-completions-format (quote vertical))
;; '(icicle-download-dir "~/emacs/site-lisp/icicles")
;; '(icicle-saved-completion-sets (quote (("myproj" . "/home/saunders/projects/the-toolshed/emacsen/emacs-support-clean/etc/myproj.icy") ("pstotext-multiview" . "/home/saunders/projects/the-livingroom/rexa2s/rexa2-front-play/pstotext-multiview.icy") ("monitor-proj" . "/home/saunders/projects/the-livingroom/rexa2s/rexa2-front-play/app/monitor-proj.icy") ("monitor" . "/home/saunders/projects/the-livingroom/rexa2s/rexa2-front-play/app/monitor.icy"))))
;; '(icomplete-mode nil nil (icomplete))
;; '(ido-case-fold t)
;; '(indent-tabs-mode t)
;; '(jde-build-function (quote (jde-ant-build)))
;; '(jde-compiler (quote (("eclipse java compiler server" "/usr/sen/tmp1/saunders/home.local/bin/eclipse-versions/eclipse-SDK-3.4.1-linux-gtk/plugins/org.eclipse.jdt.core_3.4.2.v_883_R34x.jar"))))
;; '(jde-debugger (quote ("JDEbug")))
;; '(jde-jdk-registry (quote (("1.5.0_06" . "/exp/rcf/share/X11R5/jdk1.5.0_06/"))))
;; '(jira-url "http://bugs.openreview.net/")
;; '(js-indent-level 2)
;; '(minibuffer-prompt-properties (quote (read-only t point-entered minibuffer-avoid-prompt face minibuffer-prompt)))
;; '(mouse-wheel-mode t nil (mwheel))
;; '(scala-indent:align-forms t)
;; '(scala-indent:align-parameters nil)
;; '(sgml-basic-offset 2)
;; '(show-paren-mode t nil (paren))
;; '(show-paren-style (quote expression))
;; '(sml/active-background-color "medium blue")
;; '(sml/active-foreground-color "white")
;; '(sml/full-mode-string " ...")
;; '(sml/hidden-modes (quote ("undo-tree" "SScr" "SScr-mode")))
;; '(sml/shorten-directory t)
;; '(sr-speedbar-right-side nil)
;; '(sr-speedbar-width-console 48)
;; '(sr-speedbar-width-x 48)
;; '(tab-width 2)
;; '(tool-bar-mode nil nil (tool-bar))
;; '(transient-mark-mode t)
;; '(truncate-lines t)
;; '(undo-limit 800000)
;; '(undo-strong-limit 2000000)
;; '(vline-global-mode nil)
;; '(vline-style (quote face))
;; '(yas/prompt-functions (quote (yas/ido-prompt yas/dropdown-prompt))))
;;
;;(custom-set-faces
;; ;; custom-set-faces was added by Custom.
;; ;; If you edit it by hand, you could mess it up, so be careful.
;; ;; Your init file should contain only one such instance.
;; ;; If there is more than one, they won't work right.
;; '(default ((t (:inherit nil :stipple nil :background "black" :foreground "Beige" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 130 :width normal :foundry "unknown" :family "DejaVu Sans Mono"))))
;; '(bold ((t (:weight extra-bold))))
;; '(comint-highlight-prompt ((t (:foreground "light blue"))))
;; '(compilation-info ((((class color) (min-colors 16) (background light)) (:foreground "gray" :weight bold))))
;; '(cperl-array-face ((t (:foreground "yellow" :weight bold))))
;; '(cperl-hash-face ((t (:foreground "lightblue" :slant italic :weight bold))))
;; '(cperl-nonoverridable-face ((((class color) (background light)) (:foreground "darkgreen"))))
;; '(cursor ((t (:background "white" :foreground "black"))))
;; '(diredp-dir-priv ((t (:foreground "DarkRed"))))
;; '(diredp-exec-priv ((t (:foreground "green1"))))
;; '(diredp-file-name ((t (:foreground "LightBlue"))))
;; '(diredp-file-suffix ((t nil)))
;; '(diredp-flag-mark ((t (:foreground "Yellow"))))
;; '(diredp-flag-mark-line ((t (:foreground "yellow"))))
;; '(diredp-no-priv ((t nil)))
;; '(diredp-other-priv ((t nil)))
;; '(diredp-read-priv ((t nil)))
;; '(diredp-write-priv ((t (:foreground "green3"))))
;; '(ediff-current-diff-A ((((class color) (min-colors 16)) (:background "grey50" :foreground "yellow"))))
;; '(ediff-current-diff-B ((((class color) (min-colors 16)) (:background "grey50" :foreground "yellow"))))
;; '(ediff-even-diff-A ((((class color) (min-colors 16)) (:foreground "yellow2"))))
;; '(ediff-even-diff-B ((((class color) (min-colors 16)) (:foreground "yellow2"))))
;; '(ediff-fine-diff-A ((((class color) (min-colors 16)) (:background "grey40" :foreground "red2"))))
;; '(ediff-fine-diff-B ((((class color) (min-colors 16)) (:background "grey40" :foreground "red2"))))
;; '(ediff-odd-diff-A ((((class color) (min-colors 16)) (:foreground "yellow2"))))
;; '(ediff-odd-diff-B ((((class color) (min-colors 16)) (:foreground "yellow2"))))
;; '(global-semantic-idle-completions-mode t nil (semantic-idle))
;; '(global-semantic-mru-bookmark-mode t nil (semantic-util-modes))
;; '(global-senator-minor-mode t nil (senator))
;; '(hl-line ((t (:background "dim gray"))))
;; '(icicle-search-main-regexp-others ((((background dark)) (:background "#324"))))
;; '(inhibit-startup-screen t)
;; '(italic ((t (:foreground "Yellow1" :slant italic))))
;; '(jde-java-font-lock-link-face ((t (:foreground "yellow" :underline t :slant normal))))
;; '(jde-java-font-lock-operator-face ((((class color)) (:foreground "light blue"))))
;; '(jde-java-font-lock-package-face ((((class color) (background light)) (:foreground "white"))))
;; '(match ((((class color) (min-colors 88) (background light)) (:foreground "red"))))
;; '(minibuffer-prompt ((t (:foreground "white"))))
;; '(mode-line ((t (:background "blue" :foreground "white" :weight normal))))
;; '(mode-line-inactive ((default (:inherit mode-line)) (nil (:background "grey" :foreground "blue"))))
;; '(nxml-comment-content-face ((t (:foreground "#228822" :slant italic))))
;; '(nxml-delimiter-face ((((class color) (background dark)) (:foreground "gray30"))))
;; '(nxml-heading-face ((t (:foreground "yellow3" :weight bold))))
;; '(nxml-name-face ((nil (:foreground "#FE99EE"))))
;; '(org-agenda-restriction-lock ((((class color) (min-colors 88) (background light)) (:background "yellow"))))
;; '(org-agenda-structure ((((class color) (min-colors 88) (background light)) (:foreground "green")) (t (:foreground "tomato4" :underline t :weight bold))))
;; '(org-code ((((class color grayscale) (min-colors 88) (background light)) (:foreground "lightblue"))))
;; '(org-drawer ((((class color) (min-colors 88) (background light)) (:foreground "Lightblue"))))
;; '(org-hide ((nil (:foreground "grey30"))))
;; '(org-level-1 ((nil (:inherit outline-1))))
;; '(org-level-2 ((t (:inherit outline-2))))
;; '(org-level-3 ((t (:inherit outline-3))))
;; '(org-level-4 ((t (:inherit outline-2))))
;; '(org-level-5 ((t (:inherit outline-1))))
;; '(org-level-6 ((t (:inherit outline-2))))
;; '(org-table ((((class color) (min-colors 88) (background light)) (:foreground "lightyellow"))))
;; '(org-time-grid ((t (:foreground "SlateBlue1"))))
;; '(outline-1 ((t (:inherit font-lock-function-name-face :foreground "purple"))))
;; '(paren-face ((((class color)) (:foreground "gray40"))))
;; '(semantic-complete-inline-analyzer-displayor-class (quote semantic-displayor-tooltip))
;; '(semantic-complete-inline-analyzer-idle-displayor-class (quote semantic-displayor-tooltip))
;; '(semantic-idle-scheduler-verbose-flag t)
;; '(semantic-imenu-sort-bucket-function (quote semantic-sort-tags-by-name-increasing))
;; '(semanticdb-global-mode t nil (semanticdb))
;; '(show-paren-match ((((class color) (background dark)) (:background "gray15"))))
;; '(show-paren-mode t)
;; '(sml/filename ((t (:inherit sml/global :foreground "white" :weight bold))))
;; '(sml/global ((t (:foreground "yellow"))))
;; '(vline ((t (:background "grey30"))))
;; '(w3m-anchor-face ((((class color) (background light)) (:foreground "yellow"))))
;; '(w3m-arrived-anchor-face ((((class color) (background light)) (:foreground "yellow3"))))
;; '(w3m-header-line-location-content-face ((((class color) (background light)) (:box (:line-width 2 :color "grey75" :style released-button)))))
;; '(w3m-header-line-location-title-face ((((class color) (background light)) (:box (:line-width 2 :color "grey75" :style released-button))))))
